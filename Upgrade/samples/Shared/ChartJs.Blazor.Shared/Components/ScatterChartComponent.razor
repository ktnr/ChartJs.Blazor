@using System
@using System.Collections.Generic
@using ChartJs.Blazor.ChartJS.Common
@using ChartJs.Blazor.ChartJS.Common.Utils
@using ChartJs.Blazor.ChartJS.ScatterChart
@using Newtonsoft.Json

<h2>Scatter Chart</h2>
<div class="row">
    <button class="btn btn-primary" @onclick="(()=>UpdateChart())">Update Chart </button>
</div>s

<ChartJsScatterChart ref="scatterChartJs" Config="@ScatterChartConfig" Width="600" Height="300" />

<DataDisplayComponent OnUpdatedDataStr="@OnDataStrChange" bind-DataStr="@DataStr" Width="600" Height="300" />

@code{


    ScatterChartConfig ScatterChartConfig { get; set; }
    ChartJsScatterChart _scatterChartJs;

    string DataStr
    {
        get => JsonConvert.SerializeObject(ScatterChartConfig.Data, Formatting.Indented);
        set
        {
            ScatterChartConfig.Data = JsonConvert.DeserializeObject<ScatterConfigData>(value);
            Console.WriteLine(JsonConvert.SerializeObject(ScatterChartConfig.Data));
        }
    }

    void OnDataStrChange(string dataStr)
    {
        ScatterChartConfig.Data = JsonConvert.DeserializeObject<ScatterConfigData>(dataStr);
        _scatterChartJs.Update();
    }

    protected override void OnInitialized()
    {
        var points = new List<Point>();
        points.Add(PointUtil.NewRandPoint(-10, 10, -10, 10));
        points.Add(PointUtil.NewRandPoint(-10, 10, -10, 10));
        points.Add(PointUtil.NewRandPoint(-10, 10, -10, 10));
        points.Add(PointUtil.NewRandPoint(-10, 10, -10, 10));

        ScatterChartConfig = ScatterChartConfig ?? new ScatterChartConfig
        {
            CanvasId = "myFirstScatterChart",
            Options = new ScatterConfigOptions
            {
                Title = new OptionsTitle { Display = true, Text = "Scatter Chart" },
                Responsive = true
            },
            Data = new ScatterConfigData
            {
                Datasets = new List<ScatterConfigDataset>
            {
                    new ScatterConfigDataset
                    {
                        Label = "First dataset",
                        BorderColor = "rgba(80,80,235,0.6)",
                        BackgroundColor = "rgba(80,80,235,0.6)",
                        BorderWidth = 3,
                        PointRadius = 5,
                        PointHitRadius = 5,
                        Data = points,
                        ShowLine = false
                    },
                    new ScatterConfigDataset
                    {
                        Label = "Second dataset",
                        BorderColor = "rgba(80,234,80,0.6)",
                        BackgroundColor = "rgba(80,234,80,0.6)",
                        BorderWidth = 3,
                        PointRadius = 5,
                        PointHitRadius = 5,
                        ShowLine = true,
                        Data = new List<Point>
                    {
                            PointUtil.NewRandPoint(-10, 10, -10, 10),
                            PointUtil.NewRandPoint(-10, 10, -10, 10),
                            PointUtil.NewRandPoint(-10, 10, -10, 10),
                            PointUtil.NewRandPoint(-10, 10, -10, 10)
                        }
                    },
                    new ScatterConfigDataset
                    {
                        Label = "Third dataset",
                        BorderColor = "rgba(234,80,80,0.6)",
                        BackgroundColor = "rgba(234,80,80,0.6)",
                        BorderWidth = 3,
                        PointRadius = 5,
                        PointHitRadius = 5,
                        ShowLine = false,
                        Data = new List<Point>
                    {
                            PointUtil.NewRandPoint(-10, 10, -10, 10),
                            PointUtil.NewRandPoint(-10, 10, -10, 10),
                            PointUtil.NewRandPoint(-10, 10, -10, 10),
                            PointUtil.NewRandPoint(-10, 10, -10, 10)
                        }
                    }
                }
            }
        };
    }

    public void UpdateChart()
    {
        //Update existing dataset

        ScatterChartConfig.Data.Datasets.ForEach(dataset => { dataset.Data.Add(PointUtil.NewRandPoint(-10, 10, -10, 10)); });

        _scatterChartJs.Update();
    }

}